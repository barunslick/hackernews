{"version":3,"sources":["components/Common/Button/index.js","components/Common/Button/button.jsx","hoc/withModal.js","components/Header/Header.jsx","components/Header/index.js","constants/url.js","services/hackernewsApi.js","hoc/withStoriesContainer.js","utilites/mapTimeOfUpload.js","components/Comment/CommentCard/CommetCard.jsx","components/Comment/CommentCard/index.js","components/Comment/index.js","components/Comment/Comment.jsx","components/Stories/FullStoryView/index.js","components/Stories/FullStoryView/FullStoryView.jsx","components/Stories/StoryListItem/index.js","components/Stories/StoryListItem/StoryListItem.jsx","components/Stories/StoriesContainer/StoriesContainer.jsx","components/Stories/StoriesContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","className","onClick","btnContent","props","children","withModal","Component","closeModal","history","goBack","this","React","Header","to","BASE_URL","ITEM","TOP_STORIES","USER_PROFILE","fetchContent","url","a","fetch","then","response","json","data","catch","_","result","withStoriesContainer","state","isLoading","items","error","setState","showLoadingText","getStories","mapTimeOfUpload","date","seconds","Math","floor","Date","getTime","interval","CommetCard","CommentCard","by","time","text","undefined","href","dangerouslySetInnerHTML","__html","Comment","content","controller","AbortController","commentId","commentUrl","signal","aborted","getComments","abort","kids","map","comment","key","type","FullStoryView","title","storyId","match","params","id","storyUrl","score","StoryListItem","itemId","updateCacheData","cachedData","pathname","listStyle","padding","boxSizing","StoriesContainer","item","source","rowHeight","renderItem","index","style","hasOwnProperty","EnhancedStoryView","EnhancedStoriesContainer","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c59f09c0.chunk.js","sourcesContent":["import Button from './button';\n\nexport default Button;\n","import React from 'react';\n\nimport './button.scss';\n\nexport default function Button ({className, btnContent,onClick, ...props}){\n  return(\n    <button className={`button ${className}`} onClick={onClick}>{props.children}</button>\n  )\n}\n\n","import React from 'react';\nimport '../style/Components/Modal/Modal.scss';\nimport Button from '../components/Common/Button';\n\nfunction withModal(Component) {\n\n  return class WrappedComponent extends React.Component {\n\n    closeModal = () => {\n      this.props.history.goBack();\n    }\n    \n    render() {\n      return (\n        <>\n          <div className=\"Modal\">\n            <Button className=\"Modal__closeButton\" onClick={this.closeModal}>&times;</Button>\n            <Component {...this.props} />\n          </div>\n          <div className=\"Modal-background\" onClick={this.closeModal}></div>\n        </>\n      )\n    }\n  }\n}\n\nexport default withModal;","import React from 'react';\nimport './Header.scss';\nimport {Link} from 'react-router-dom';\n\nexport function Header (){\n  return (\n    <div className=\"Header\">\n      <div className=\"Header__container\">\n        <h1>\n          <Link to='/'> Hackernews</Link>\n          </h1>\n      </div>  \n    </div>\n  )\n}\n\nexport default Header;","import Header from './Header';\n\nexport default Header;","export const BASE_URL = 'https://hacker-news.firebaseio.com/v0/';\n\nexport const ITEM = `${BASE_URL}item/`;\nexport const TOP_STORIES = `${BASE_URL}topstories.json`;\n\nexport const USER_PROFILE = `https://news.ycombinator.com/user?id=`;\n","export default async function fetchContent(url) {\n  let result = await fetch(url)\n    .then(response => response.json())\n    .then(data => data)\n    .catch ( _ => {return null});\n\n  return result;\n}","import React from 'react';\nimport { TOP_STORIES } from '../constants/url';\nimport fetchContent from '../services/hackernewsApi';\n\nimport '../components/Common/Loader/loader.scss';\n\nfunction withStoriesContainer(Component) {\n\n  return class WrappedComponent extends React.Component {\n\n    constructor() {\n      super();\n      this.state = {\n        isLoading: true,\n        items: [],\n        error: false\n      }\n    }\n\n    async getStories() {\n      let result = await fetchContent(TOP_STORIES);\n      if (result === null){\n        this.setState({\n          error: true\n        })\n        return;\n      }\n      if (result.error) {\n        this.setState({\n          showLoadingText: 'We seem to have problem connecting to Hackernews. Try again later.(Bad URL)',\n        })\n      }else{\n        this.setState({\n          items: result,\n          isLoading: false\n        })\n      }\n    }\n\n    componentDidMount() {\n      this.getStories();\n    }\n\n    render() {\n      if (this.state.error) {\n        return (\n          <p className=\"firstFetchLoadP\">\n            Cant connect with hackernews right now.\n          </p>\n        )\n      }\n      return (\n        <div>\n          {this.state.isLoading ? <div className=\"loader center\">Loading...</div> : <Component items={this.state.items} />}\n        </div>\n      )\n    }\n  }\n}\n\nexport default withStoriesContainer;","export default function mapTimeOfUpload(date) {\n\n  var seconds = Math.floor(((new Date().getTime()/1000) - date)),\n  interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) return interval + \"y\";\n\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) return interval + \"m\";\n\n  interval = Math.floor(seconds / 86400);\n  if (interval >= 1) return interval + \"d\";\n\n  interval = Math.floor(seconds / 3600);\n  if (interval >= 1) return interval + \"h\";\n\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) return interval + \"m \";\n\n  return Math.floor(seconds) + \"s\";\n}","import React from 'react';\n\nimport { USER_PROFILE } from '../../../constants/url';\nimport mapTimeOfUpload from '../../../utilites/mapTimeOfUpload';\n\nimport './CommentCard.scss';\nimport '../../Common/Loader/loader.scss';\n\nfunction CommetCard(props) {\n\n  const { by, time, text, isLoading} = props;\n\n  \n  if (isLoading)\n  {\n    return (\n      <div className=\"CommentCard__sub-content\">\n        <div className=\"loader\">Loading...</div>\n      </div>\n    )\n  }\n\n  if (by === undefined){\n    return null;\n  }\n\n  return (\n    <div className=\"CommentCard__sub-content\">\n      <div className=\"CommentCard__header\">\n        <a className=\"CommentCard__username\" href={`${USER_PROFILE + by}`}><span dangerouslySetInnerHTML={{ __html: by }} ></span></a>\n        <span>&middot;</span>\n        <span className=\"CommentCard__time\">{mapTimeOfUpload(time)}</span>\n      </div>\n      <p className=\"CommentCard__textContent\" dangerouslySetInnerHTML={{ __html: text }}></p>\n    </div>\n  )\n}\n\nexport default CommetCard;\n","import CommentCard from './CommetCard';\n\nexport default CommentCard;","import Comment from './Comment';\n\nexport default Comment;","import React from 'react';\nimport CommentCard from './CommentCard';\nimport { ITEM } from '../../constants/url';\n\nimport './Comment.scss';\nimport '../Common/Loader/loader.scss';\n\nexport class Comment extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      content: {},\n      error: false\n    }\n\n    //Abort Controller is an experimental feature and doesnt work on IE.\n    //Use Axios for better handling. I am using this to be familiar with the Api.\n    this.controller = new AbortController();\n    this.commentId = this.props.commentId;\n  }\n\n  async getComments() {\n\n    let commentUrl = `${ITEM + this.commentId}.json`;\n\n    //fetch is used here instead of calling hackernewsApi.js, so that we can abort the call easily when the component unmounts\n    let result = await fetch(commentUrl, { signal: this.controller.signal })\n      .then(response => response.json())\n      .then(data => data)\n      .catch(_ => { return null });\n\n    if (this.controller.signal.aborted) return;\n\n    if (result === null) {\n      this.setState({\n        error: true\n      })\n\n      return;\n    }\n\n    this.setState({\n      content: result,\n      isLoading: false\n    })\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  render() {\n\n    if (this.state.error) return (\n      <div className='Comment'>\n        Cant fetch comment.\n      </div>\n    )\n    const { by, time, text, kids } = this.state.content || {};\n    return (\n      <>\n        {this.state.isLoading ?\n          <div className='Comment'>\n            <CommentCard isLoading={true} />\n          </div>\n          :\n          <div className='Comment'>\n            <CommentCard isLoading={false} by={by} time={time} text={text} />\n            {(kids || []).map(comment => (\n              <Comment key={comment} commentId={comment} type=\"child\" />\n            ))\n            }\n          </div>\n        }\n      </>\n    )\n  }\n}\n\nexport default Comment;\n","import FullStoryView from './FullStoryView';\n\nexport default FullStoryView;","import React from 'react';\nimport Comment from '../../Comment';\nimport { ITEM, USER_PROFILE } from '../../../constants/url';\nimport mapTimeOfUpload from '../../../utilites/mapTimeOfUpload';\n\nimport './FullStoryView.scss';\nimport '../../Common/Loader/loader.scss';\n\nexport class FullStoryView extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      kids: [],\n      title: '',\n      result: {},\n      error: false\n    }\n\n    //Abort Controller is an experimental feature and doesnt work on IE.\n    //Use Axios for better handling. I am using this to be familiar with the Api.\n    this.controller = new AbortController();\n    this.storyId = this.props.match.params.id;\n  }\n\n  async getComments() {\n\n    let storyUrl = `${ITEM + this.storyId}.json`;\n\n    //fetch is used here instead of calling hackernewsApi.js, so that we can abort the call easily when the component unmounts\n    let result = await fetch(storyUrl, { signal: this.controller.signal })\n      .then(response => response.json())\n      .then(data => data)\n      .catch(_ => { return null });\n\n    if (this.controller.signal.aborted) return;\n\n    if (result === null) {\n      this.setState({\n        error: true\n      })\n\n      return;\n    }\n\n    this.setState({\n      kids: result.kids,\n      title: result.title,\n      result: result,\n      isLoading: false\n    })\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  render() {\n\n    if (this.state.error) return (\n      <div className=\"FullStoryView\">\n        Cant fetch content right now.\n      </div>\n    )\n\n    return (\n      <div className=\"FullStoryView\">\n        {this.state.isLoading ? <div className=\"loader center\">Loading...</div> :\n          <>\n            <div className=\"FullStoryView__header\">\n\n              <h2><a href={this.state.result.url || '#'}>{this.state.title}</a></h2>\n\n              <div className=\"FullStoryView__details\">\n                <span className=\"FullStoryView__username\" ><span className=\"gray\">By: </span><a href={USER_PROFILE + this.state.result.by}>{this.state.result.by}</a></span>\n                <span>&middot;</span>\n                <span><span className=\"gray\">Score: </span>{this.state.result.score} </span>\n                <span>&middot;</span>\n                <span>{mapTimeOfUpload(this.state.result.time)} ago</span>\n              </div>\n\n            </div>\n            <div className=\"FullStoryView__comment\">\n              <h3 className=\"FullStoryView__comment-header\">Comments</h3>\n              {(this.state.kids || []).map((commentId) => (<Comment key={commentId} commentId={commentId} />))}\n            </div>\n          </>\n        }\n      </div>\n    )\n  }\n}\n\nexport default FullStoryView;\n","import StoryListItem from './StoryListItem';\n\nexport default StoryListItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ITEM, USER_PROFILE } from '../../../constants/url';\nimport mapTimeOfUpload from '../../../utilites/mapTimeOfUpload';\n\nimport './StoryListItem.scss';\nimport '../../Common/Loader/loader.scss';\n\nexport class StoryListItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      content: {},\n      error: false\n    }\n\n    //Abort Controller is an experimental feature and doesnt work on IE.\n    //Use Axios for better handling. I am using this to be familiar with the Api.\n    this.controller = new AbortController();\n  }\n\n  async getStories() {\n\n    let storyUrl = `${ITEM + this.props.itemId}.json`;\n\n    //fetch is used here instead of calling hackernewsApi.js, so that we can abort the call easily when the component unmounts\n    let result = await fetch(storyUrl, { signal: this.controller.signal })\n      .then(response => response.json())\n      .then(data => data)\n      .catch(_ => {return null});\n    \n    //when component is unmounted, check abort signal\n    if (this.controller.signal.aborted) return;\n\n    if (result === null){\n      this.setState({\n        error: true\n      })\n\n      return;\n    }\n\n    this.setState({\n      content: result,\n      isLoading: false,\n      error: false\n    })\n\n    this.props.updateCacheData(result);\n  }\n\n  componentDidMount() {\n    if (this.props.cachedData === null) {\n      this.getStories();\n    } else {\n      this.setState({\n        content: this.props.cachedData,\n        isLoading: false\n      })\n    }\n  }\n\n  componentWillUnmount() {\n    this.controller.abort();\n  }\n\n  render() {\n\n    if (this.state.error) return(\n      <div className=\"StoryLisItem\">\n        Can't get your stories\n      </div>\n    )\n\n    const { title, by } = this.state.content || {};\n\n    return (\n      <div className=\"StoryLisItem\">\n        {\n          this.state.isLoading ?\n            <div className=\"loader\">Loading...</div>\n            : (\n              <>\n                <p className=\"StoryLisItem__title\">\n                  <Link to={{\n                    pathname: `/story/${this.state.content.id}`\n                  }}>\n                    {title}\n                  </Link></p>\n                <p className=\"StoryLisItem__details\">\n                  <span className=\"StoryLisItem__author\">By: <a href={USER_PROFILE + by}>{by}</a>\n                  </span>\n                  <span className=\"StoryLisItem__time\">\n                    {mapTimeOfUpload(this.state.content.time)} ago\n                  </span>\n                </p>\n              </>\n            )\n        }\n      </div>\n\n    )\n  }\n}\n\nexport default StoryListItem;\n","import React from 'react';\nimport StoryListItem from '../StoryListItem';\nimport List from 'react-virtualized-listview';\n\nimport './StoriesContainer.scss';\n\nconst listStyle = {\n  item: {\n    padding: 10,\n    boxSizing: \"border-box\",\n  }\n};\n\nfunction StoriesContainer(props) {\n\n  const data = [...props.items];\n  let cachedData = {};\n\n  function updateCacheData(item) {\n    const { id } = item;\n    cachedData[id] = item;\n  }\n\n  return (\n    <div className=\"StoriesContainer\">\n      <List\n        source={data}\n        rowHeight={100}\n        renderItem={({ index, style }) => (\n          <div key={index} style={{ ...listStyle.item, ...style }}>\n            <StoryListItem key={index} itemId={data[index]} updateCacheData={updateCacheData} cachedData={cachedData.hasOwnProperty(data[index]) ? cachedData[data[index]] : null} />\n          </div>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default StoriesContainer;","import StoriesContainer from './StoriesContainer';\n\nexport default StoriesContainer;","import React from 'react';\nimport withModal from './hoc/withModal';\nimport Header from './components/Header/index';\nimport withStoriesContainer from './hoc/withStoriesContainer';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport FullStoryView from './components/Stories/FullStoryView';\nimport StoriesContainer from './components/Stories/StoriesContainer';\n\nimport './App.scss';\nimport './style/base.scss';\nimport './style/reset.scss';\nimport './style/style.scss';\n\nlet EnhancedStoryView = withModal(FullStoryView);\nlet EnhancedStoriesContainer = withStoriesContainer(StoriesContainer);\n\nfunction App() {\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div className=\"Container\">\n            <Route path='/' component={EnhancedStoriesContainer} />\n            <Route path='/story/:id' component={EnhancedStoryView}/>\n          </div>\n        </div>\n      </Router>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}